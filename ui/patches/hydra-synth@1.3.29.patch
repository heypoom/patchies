diff --git a/node_modules/hydra-synth/.bun-tag-1a31560d30e22817 b/.bun-tag-1a31560d30e22817
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/src/hydra-synth.js b/src/hydra-synth.js
index 952f62a6e9bd59066993a5b6a826cbf32f292dff..edf471cab17858a7c4c2ebeb242276fd478b2337 100644
--- a/src/hydra-synth.js
+++ b/src/hydra-synth.js
@@ -12,9 +12,18 @@ import Generator from './generator-factory.js'
 import regl from 'regl'
 // const window = global.window
 
-
-
-const Mouse = MouseTools()
+console.log('[hydra.patchies] patched hydra-synth.js 1.3.29')
+
+// const Mouse = MouseTools()
+// [Patchies] stub mouse for now
+const Mouse = {
+  x: 0,
+  y: 0,
+  listen: () => {},
+  unlisten: () => {},
+  buttonState: {},
+  mods: {}
+}
 // to do: add ability to pass in certain uniforms and transforms
 class HydraRenderer {
 
@@ -29,6 +38,7 @@ class HydraRenderer {
     detectAudio = true,
     enableStreamCapture = true,
     canvas,
+    gl,
     precision,
     extendTransforms = {} // add your own functions on init
   } = {}) {
@@ -42,7 +52,10 @@ class HydraRenderer {
     this.renderAll = false
     this.detectAudio = detectAudio
 
-    this._initCanvas(canvas)
+    // [Patchies] do not try to manage canvases if gl context is provided
+    if (!gl && canvas) {
+      this._initCanvas(canvas)
+    }
 
     //global.window.test = 'hi'
     // object that contains all properties that will be made available on the global context and during local evaluation
@@ -264,6 +277,7 @@ class HydraRenderer {
       color: [0, 0, 0, 1]
     })
 
+    // TODO[Patchies]: make this webgl 2
     this.renderAll = this.regl({
       frag: `
       precision ${this.precision} float;
@@ -293,6 +307,7 @@ class HydraRenderer {
 
       }
       `,
+      // TODO[Patchies]: make this webgl 2
       vert: `
       precision ${this.precision} float;
       attribute vec2 position;
@@ -319,6 +334,7 @@ class HydraRenderer {
       depth: { enable: false }
     })
 
+    // TODO[Patchies]: make this webgl 2
     this.renderFbo = this.regl({
       frag: `
       precision ${this.precision} float;
